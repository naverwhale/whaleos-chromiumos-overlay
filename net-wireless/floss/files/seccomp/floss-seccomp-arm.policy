# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# rseq should be first due to frequency and purpose to decrease nptl latency
rseq: 1

_llseek: 1
accept: 1
access: 1
bind: 1
brk: 1
chmod: 1
chown32: 1
clock_getres: 1
clock_getres_time64: 1
clock_gettime: 1
clock_gettime64: 1
clock_nanosleep: 1
clock_nanosleep_time64: 1
# clone is used to fork a process
clone: 1
close: 1
connect: 1
epoll_create1: 1
epoll_ctl: 1
epoll_pwait: 1
epoll_wait: 1
eventfd2: 1
exit: 1
exit_group: 1
faccessat2: 1
faccessat: 1
fchmod: 1
fchmodat: 1
fchownat: 1
fcntl64: 1
fcntl: 1
flock: 1
fstat64: 1
fstatat64: 1
fstatfs: 1
fstatfs64: 1
fsync: 1
futex: 1
getcpu: 1
getdents64: 1
getegid32: 1
geteuid32: 1
getgid32: 1
getpid: 1
getrandom: 1
getresgid32: 1
getresuid32: 1
getrusage: 1
getsockname: 1
gettid: 1
getuid32: 1
# kill is used to force a restart as part of fault tolerance
kill: 1
link: 1
listen: 1
lseek: 1
lstat64: 1
madvise: 1
munmap: 1
nanosleep: 1
openat: 1
poll: 1
ppoll: 1
prlimit64: 1
process_vm_readv: 1
pselect6: 1
read: 1
readlink: 1
readlinkat: 1
recv: 1
recvfrom: 1
recvmsg: 1
rename: 1
renameat: 1
restart_syscall: 1
rt_sigaction: 1
rt_sigprocmask: 1
rt_sigreturn: 1
rt_sigtimedwait: 1
sched_get_priority_max: 1
sched_get_priority_min: 1
sched_getaffinity: 1
sched_getattr: 1
sched_getparam: 1
sched_getscheduler: 1
sched_setattr: 1
sched_setscheduler: 1
sched_yield: 1
send: 1
sendmsg: 1
sendto: 1
set_robust_list: 1
setpriority: 1
setrlimit: 1
setsockopt: 1
shutdown: 1
sigaltstack: 1
socketpair: 1
stat64: 1
statfs: 1
statx: 1
sysinfo: 1
tgkill: 1
timer_create: 1
timer_delete: 1
timer_gettime64: 1
timer_gettime: 1
timer_settime64: 1
timer_settime: 1
timerfd_create: 1
timerfd_settime: 1
ugetrlimit: 1
uname: 1
unlink: 1
unlinkat: 1
write: 1
writev: 1

mmap2: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE

mprotect: arg2 in ~PROT_EXEC

# socket is necessary for communication with BT device and audio server
socket: arg0 == AF_UNIX || arg0 == AF_BLUETOOTH || arg0 == AF_LOCAL

# prctl is used to rename threads
prctl: arg0 == PR_SET_NAME || arg0 == PR_GET_NAME

# ioctl:
# TUNSETIFF: 0x400454ca
# Type 'U' commands: 0x....55..
ioctl: arg1 == 0x400454ca || arg1 in 0xffff55ff && arg1 & 0x00005500 || arg1 == FIONREAD || arg1 == SIOCGIFHWADDR || arg1 == SIOCSIFHWADDR || arg1 == SIOCSIFFLAGS
