From 6bdead2941c7bbc8e7f9234dc98a8aac24219b2e Mon Sep 17 00:00:00 2001
From: Junichi Uekawa <uekawa@google.com>
Date: Thu, 6 Jul 2023 17:40:38 +0900
Subject: [PATCH] Support device files.

Device files do not give file size with st.st_size field, they return 0. Instead there's an ioctl to
obtain device file size, BLKGETSIZE64. Use it.
---
 misc-utils/fincore.c | 33 +++++++++++++++++++++++++--------
 1 file changed, 25 insertions(+), 8 deletions(-)

diff --git a/misc-utils/fincore.c b/misc-utils/fincore.c
index e5e25e5c7..385319d05 100644
--- a/misc-utils/fincore.c
+++ b/misc-utils/fincore.c
@@ -19,8 +19,10 @@
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
+#include <sys/ioctl.h>
 #include <sys/mman.h>
 #include <sys/stat.h>
+#include <sys/mount.h>
 #include <unistd.h>
 #include <getopt.h>
 #include <stdio.h>
@@ -222,33 +224,48 @@ static int fincore_fd (struct fincore_control *ctl,
 	return rc;
 }
 
+static int64_t get_size(int fd, struct stat *sb) {
+        if (S_ISBLK(sb->st_mode)) {
+                // maybe it is a block device.
+                int64_t len;
+                if (0==ioctl(fd, BLKGETSIZE64, &len)) {
+                        return len;
+                }
+        }
+        return sb->st_size;
+}
+
 /*
  * Returns: <0 on error, 0 success, 1 ignore.
  */
 static int fincore_name(struct fincore_control *ctl,
 			const char *name,
-			struct stat *sb,
+			off_t *size,
 			off_t *count_incore)
 {
 	int fd;
 	int rc = 0;
+	struct stat sb;
 
 	if ((fd = open (name, O_RDONLY)) < 0) {
 		warn(_("failed to open: %s"), name);
 		return -errno;
 	}
 
-	if (fstat (fd, sb) < 0) {
+	if (fstat (fd, &sb) < 0) {
 		warn(_("failed to do fstat: %s"), name);
 		close (fd);
 		return -errno;
 	}
 
-	if (S_ISDIR(sb->st_mode))
+	if (S_ISDIR(sb.st_mode))
 		rc = 1;			/* ignore */
 
-	else if (sb->st_size)
-		rc = fincore_fd(ctl, fd, name, sb->st_size, count_incore);
+	else {
+                *size = get_size(fd, &sb);
+                if (size)
+                        rc = fincore_fd(ctl, fd, name, *size, count_incore);
+        }
 
 	close (fd);
 	return rc;
@@ -391,12 +408,12 @@ int main(int argc, char ** argv)
 
 	for(; optind < argc; optind++) {
 		char *name = argv[optind];
-		struct stat sb;
 		off_t count_incore = 0;
+		off_t size = 0;
 
-		switch (fincore_name(&ctl, name, &sb, &count_incore)) {
+		switch (fincore_name(&ctl, name, &size, &count_incore)) {
 		case 0:
-			add_output_data(&ctl, name, sb.st_size, count_incore);
+			add_output_data(&ctl, name, size, count_incore);
 			break;
 		case 1:
 			break; /* ignore */
-- 
2.41.0.390.g38632f3daf-goog

