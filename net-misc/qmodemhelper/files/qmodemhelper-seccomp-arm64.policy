# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# USBDEVFS_REAPURB: 0x4008550c
# USBDEVFS_CLAIMINTERFACE: 0x8004550f
# USBDEVFS_RELEASEINTERFACE: 0x80045510
# USBDEVFS_SUBMITURB: 0x8038550a
# USBDEVFS_BULK: 0xc0185502
# USBDEVFS_IOCTL: 0xc0105512
ioctl: arg1 == 0x4008550c || arg1 == 0x8004550f || arg1 == 0x80045510 || arg1 == 0x8038550a || arg1 == 0xc0185502 || arg1 == 0xc0105512
read: 1
write: 1
openat: 1
close: 1
newfstatat: 1
lseek: 1
getrandom: arg2 in ~GRND_RANDOM
futex: 1
mmap: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
readlinkat: 1
munmap: 1
mprotect: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
faccessat: 1
fstatfs: 1
getdents64: 1
rt_sigprocmask: 1
getpid: 1
ppoll: 1
brk: 1
sendto: 1
fcntl: 1
set_robust_list: 1
rseq: 1
# Policy generation from strace results in:
# "socket: arg0 == AF_NETLINK || arg0 == AF_UNIX"
# This is not restrictive enough. Manually add acceptable socket args:
# allow AF_UNIX for SOCK_DGRAM (syslog) and SOCK_STREAM (mbim-proxy)
# allow NETLINK_KOBJECT_UEVENT = 15 for udev
socket: arg0 == AF_UNIX && arg2 == 0 || \
        arg0 == AF_NETLINK && arg2 == 15
gettid: 1
connect: 1
eventfd2: 1
sched_setattr: 1
rt_sigaction: 1
# qmodemhelper interacts with the modem via mbim, which spawns a glib main loop
clone: 1
# qmodemhelper interacts with the modem via mbim, which spawns a glib main loop
prctl: arg0 == PR_SET_NAME
setsockopt: 1
set_tid_address: 1
prlimit64: 1
sched_getattr: 1
statx: 1
clock_nanosleep: 1
bind: 1
getsockname: 1
madvise: 1
exit: 1
unlinkat: 1
exit_group: 1
restart_syscall: 1
rt_sigreturn: 1
